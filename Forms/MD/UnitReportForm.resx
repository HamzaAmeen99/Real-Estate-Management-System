<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIB0AAAEAIAAcDwAAFgAAACgAAAAgAAAAOgAAAAEAIAAAAAAAgA4AAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAALSosAjUvMgM5MzcEMSwxBi4qLQQ3NjcIKCcoEDEtMAUwKy8EODc3BC8t
        LgYyLzEMLiotBj03OQF7cnYALSgsBColKQUvKi8FLCstAyIfIgQvKi0EODM0AickJgMoJSgFMC0xAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAIB0fAB4bHABKR0kIMCwuHy4qLS0uKS4fLiktGDIxMQ4rKCovLSksIS0p
        LBwwLy8ZKigoLSsnKicqJyouLSstFiglJhgnIycnKiUpJComKiEtLC4TJiQmNCsoKi8tKiwjJyUmGygl
        KB5kV14AIyIkAEFCPwAAAAAAKCgpACMiJAAgHB4DHhscEiAfHxUlIiMkIyEiJx4eHhYhHx8WIR8fISQi
        IiUiIiIYIB8fFyEfICQhICEmHh4eFiEfICAiICEhHx0eLR8dHh8gHiAYHhweFiIhIhkkIyUmIyIkISIh
        IyQjIyMpISAhHSEgIhUkIyUNHRkeACAdIgApKSkKJCIkJSIhIjAiICE5IB4gMiMhIzwfHyAlISAhOyIg
        ITciICIxIR8hLCEfIDIhHyIsIiEjMiIhIy4gHSAvIR0gNCEfIS4hHyI2IiEiPCIhIywhICIxIyIkOyIh
        IzsgHiE4Hx0gNyIhIy0iISQtJCMmOyQiJTAjHyMoIR0iHCgnKBwjISR1IiAidSUjJVQhHiJnJSQmTR4d
        HxoiISNrIyAjXyMhJFsjISNXIR4hZyMhJFMlJCZtJyYnRiIeIk0iHyJQJCIlSCQhJGUkIiR4JCIlVCMi
        JWUlJCZsJCQmTyEgI0whHyJgIiEjcyQjJW0nJihjJCEkciIfI2kiHiI6JyUnCCUjJC8kIiQyJSQlLCMi
        JCokIyUlIiEjHiQjJTQlJCYzJiMmNCglJx8kIyUgJSUmNCgmKCsrKCoSJCIkDSQjJQsnJScRJyUnFygm
        KBopJikUJiQnGiYkJkEkISQ2Ih8iNyMhI0MjIiRHIiEjSCMhI0kkISRLJCIkSiYjJSgeHSAUIB8hsyAf
        IdogHyHaIB8h2yAfIdsgHyHbIB8h2iAgIdsgHyHRIiEjMSEgInwgICHbIiEjaConKQAjISMAIyIkACYk
        JgAnJCYAJyUnACgmKAAhICIzIB8h2yAfIeggHyHpIB8h6yAfIewgHyHtIB8h7SAfIe0hHyHuIiAigB8e
        IRkgHyHVIB8h/yAfIf8gHyH/IB8h/yAfIf8gHyH/IB8h/yAfIfchICI9ISAikSAfIf8gHyF+AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACEgIjsgHyH4IB8h/yAfIfQgHyHqIB8h6iAfIesgHyHsIB8h+SAf
        If8gHyGJIB8hGSAfIdUgHyH5IB4giB8eIGUfHiBlIB8hZR8eIHQgHyHpIB8h9yAfIT4gHyGOIB8h/yAf
        IX4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIB4gISAeIIkgHiCNIB4gTyIgIigiICIpISAiKiEh
        IiwhICKuIB8h/yAfIYcgHyEbIB8h1yAfIfUfHiA0ISAiACEgIgAgHyIAHRwfEiAfIdggHyH6ISAiQR8e
        IIwgHyH/ISAigQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApJikAIyMlACEhIwAgHyIAIB8hACAf
        IgAgHyEAHh4fACEgIp0gHyH/Hx4ghR4dIBsgHyHYIB8h9iAfIVQjIiQjIyIkIyIhJCMhICM3IB8h3yAf
        IfsgHyFBIB8hjCAfIf8gHyKEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACIhIwQhICInIB8iLyAf
        Ii4gHyIuIB8iLiAfIi4gHyIvIB8hsyAfIf8fHiCEIB4iHSAfIdggHyH+IB8h6iAfIeQgHyHlIB8h5SAf
        IecgHyHrIB8hhCAfIREhICKOIB8h/x8eIYcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAISAiFSAf
        IccgHyHtIB8h7SAfIe0gHyHtIB8h7SAfIe0gHyH5IB8h/yAfIoMjICQdIB8h2iAfIf8gHyH/IB8h+SAf
        IfMgHyH0IB8h9SAfIeMgHyFUJSQoAiEgIo0gHyH/IB8hiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAhHyMWIB8h1iAfIf8gHyH/IB8h/SAfIfwgHyH7IB8h+SAfIfcgHyH2IB8jeiQgJQkhHyGLIB8h+yAf
        If8gHyHVIB4hVh8eITcfHiFMIB8h4yAfIekfHyEuISAhiSAfIf8gHyGIHx4hAB8eIQAfHiEAHx4hAB4e
        IQAgHyIAIiEjACAfIhUgHyHVIB8h/yAfIZEgHyBSIR8hTyIhI0shISJHIiEiQx8eIUAfHiEeJCAlACIh
        Iw0gHyGTIB8h+yAfIf0gHyG5IB8iJh4dIREgHyHYIB8h/CAfIUUgHyGGIB8h/yAfIacfHiE8Hx4hPB4e
        ITweHSA7Hh0gOyAfIjsjIiQuIB8hGCAfIdQgHyH/Hx4hVh8eIAAfHR8AHx4gAB4eHwAgHyEAHx4gAB8e
        IAAAAAAAISAiACEgIw4gHyKUIB8h/CAfIf8gHyHNIB8hUiAfIdggHyH6ISAiQSAfIYYgHyH/IB8h+iAf
        IfUgHyH1IB8h9SAfIfUgHyH1IB8h9CAfIcIfHiAjIB8h0yAfIf8gHyJUIR8hMCIgIn4hHyGBIR8hWici
        JwcAAAAAAAAAAAAAAAAAAAAAISAiACEgIw4gHyGVIB8h/CAfIf8gHyHoIB8h8yAfIfcgHyE+Hx4ghSAf
        If8gHyH7IB8h8yAfIfMgHyHyIB8h8iAfIfEgHyHwIB8ivCAfISIgHyHSIB8h/SAfIoggHyHPIB8h/yAf
        Id0gHiFBIx4jAQAAAAAAAAAAAAAAAAAAAAAAAAAAIB8iACIhIw8gHyKXIB8h/CAfIf8gHyH/IB8h9R8e
        IDwfHiGFIB8h/yAfIbIfHiA5Hx4gOB8eIDceHR82IB8hNSIhIzMhICMmIB4gFiAfIdMgHyH+IB8h9SAf
        If8gHyHbHx4hQSAfIAAhHCIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAISAiACEgIw8gHyGYIB8h/CAf
        If8gHyH1IB8hPCEeIYQgHyH/IB8hmx8eIAAfHiAAHx4gAB4dHwAgHyEAISAiACAfIgAgHB8TIB4h0iAf
        If8gHyH/IB8h3B8eIUIcGxsAHh0fAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIR8iACAf
        IxAgHyKaIB8h/SAfIfUiISM7IR4hhCAfIf8hICKdEg4hAAAAAAAAAAAAAAAAACEgIhQgHyEoICAiHiAd
        IRUgHiHSIB8h/yAfId8gHyFEIiIeACIhIwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAISAjACIhJBEgHyKcIB8h8yEgIjkgHiKDIB8h/yEhIp8AAAMAAAAAAAAAAAAAAAAAISAidSAf
        IeggHyGxIyElHSEfItMgHyHiIB8hSCMhIAAfHiMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAISAjACEgJBEgHyKQISAiNSAeIoIgHyH/IB8hoCkpGQAAAAAAAAAAACEg
        IwAhICOBIB8h/yAfIcYkIyYgISAisx8eIU0fHR0AHh4gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIiAjACIhIw0jISQMIiAjhiAfIf8gHyHDIB8iFiAf
        IgAiISUAJCInASAfIo4gHyH/IB8hySUkJxgjIiQrFRAbACAfIgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZFyIAISAiACIgIwAhISJrIB8h+yAf
        If0gHyGfIB8iDx8cHgAgHyFTIB8h5yAfIf8gHyG8Hx4iCx4dIAAfHiAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAg
        Ig8gHyKVIB8h/CAfIfwgHyGPIB8iViAfIeUgHyH/IB8h0SAfIjohISEBdnV1AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAIB8hACIhJA8gHyKaIB8h/SAfIfsgHyHzIB8h/yAfIcogHyIyIB8gACEhIgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAISAiACIhJBEgHyKeIB8h/iAfIf8gHyHCIB8iKyAfIQAiICUAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAISAjACIgJBMgHyKjIB8huCEgIiUfHiEAISEkAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIR8iACEfIhQhHyEZIB8hACEg
        IgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAgD/AA
        AA/AAAADAAAAAAAAAAAAAAAAAAP4AAAD+AAAA/gADgP/+AAD+AAAA/gAAAP4AAAD+ACAAAB/wAAAA+AA
        AAPwAAAP+AP4H/wDwD/+A8B//wPA//+Bgf//4IP//+AD///wD///+B////w////+f/8=
</value>
  </data>
</root>